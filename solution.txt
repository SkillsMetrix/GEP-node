import { CustomerService } from "src/customer/customer.service";
import { ShopCartService } from "./shopcart.service";
import { Body, Controller, Get, Param, Post } from "@nestjs/common";
import { ShopCartDTO } from "./dto/add-to-cart.dto";

@Controller('shopcart')
export class ShopCartController {

    constructor(private scs: ShopCartService, private cs: CustomerService) {

    }
    @Get(':customerId')
    getCustomerCart(@Param('customerId') customerId: number) {
        return this.scs.getCart(Number(customerId))

    }
    @Post('add')
    addToCart(@Body() addToCart: ShopCartDTO){
        const customer=this.cs.getById(addToCart.customerId)
        if(!customer){
            return {message:'Customer not Found..!'}
        }
        return this.scs.addToCart(
            customer,addToCart.productId,addToCart.quantity
        )
        

    }
}


-------------


import { Injectable } from "@nestjs/common"
import { Customer } from "src/customer/customer.service"

export interface CartItem {
    productId: number
    quantity: number
}
@Injectable()
export class ShopCartService {

    private carts: Record<number, CartItem[]> = {}

    addToCart(customer: Customer, productId: number, quantity: number): string {
        if (!this.carts[customer.id]) {
            this.carts[customer.id] = []
        }
        this.carts[customer.id].push({ productId, quantity })
        return `Added Product: ${productId} (x${quantity}) to ${customer.name}'s cart`
    }

    getCart(customerId: number): CartItem[] {
        return this.carts[customerId] || []

    }
}
