import { Controller, Get } from '@nestjs/common';
import axios from 'axios';
import axiosRetry from 'axios-retry';
import CircuitBreaker from 'opossum'


axiosRetry(axios, {
  retries: 3,
  retryDelay: (retryCount) => retryCount * 1000,
  retryCondition: (error) => {
    return axiosRetry.isNetworkError(error) || axiosRetry.isRetryableError(error)
  }

})
@Controller('customer')
export class CustomerController {
  private gatewayUrl = 'http://localhost:3000/gateway';
  private breaker: CircuitBreaker<[void], any>
  constructor() {
    this.breaker = new CircuitBreaker(
      async () => {
        const response = await axios.get(`${this.gatewayUrl}/shop/bill`, {
          params: { item: 'Book', amount: 200 },
        });
        return response.data
      }, {
      timeout: 5000,
      errorThresholdPersentage: 50,
      resetTimeOut: 10000
    }

    )
    this.breaker.on('open', () => console.log('Circuit Open'))
    this.breaker.on('halfOpen', () => console.log('Circuit half Open'))
    this.breaker.on('close', () => console.log('Circuit close ,app is healthy'))
  }

  @Get('buy')
  async buy() {

    try {
      const bill = await this.breaker.fire()
      return { mesage: 'customer purchased Item ', bill }
    } catch (err: any) {

      return {
        message: 'Customer Purchased Item',
        bill: { error: 'Failed to reach shop service', details: err.message }
      }
    }
  }
}
