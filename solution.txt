import { INestApplication } from '@nestjs/common';
import { Test } from '@nestjs/testing';
import { AppModule } from '../src/app.module';
import request from 'supertest';

describe('AppController', () => {
  let app: INestApplication;

  beforeAll(async () => {
    const moduleRef = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();
    app = moduleRef.createNestApplication();
    await app.init();
  });
  afterAll(async () => {
    await app.close();
  });
  it('check the get method', async () => {
    const res = await request(app.getHttpServer())
      .get('/shop/bill')
      .query({ item: 'Book', amount: 200 })
      .expect(200);
      expect(res.body).toHaveProperty('shop','Shop Service')
      expect(res.body).toHaveProperty('item','Book')
  });
  it('missing query parameters',async()=>{
   const res = await request(app.getHttpServer())
      .get('/shop/bill')
     
      .expect(200);

      expect(res.body).toHaveProperty('shop','Shop Service')
      expect(res.body).toHaveProperty('item','Book')
  })

   it('string amount should be returned',async()=>{
   const res = await request(app.getHttpServer())
      .get('/shop/bill')
      .query({ item: 'Book', amount: '200' })
      .expect(200);
      
      expect(res.body).toMatchObject({shop: 'Shop Service',item:'Book',status:'Billed'})
      expect(res.body.amount =='200' || res.body.amount == 150).toBeTruthy()
  })
});
